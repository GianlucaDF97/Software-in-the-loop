%% File : send_MAVLink_v4_4_2_beta_3_HOME.tlc
%% Created : Fri Jul 19 14:38:19 2019
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "send_MAVLink_v4_4_2_beta_3_HOME.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  send_MAVLink_v4_4_2_beta_3_HOME "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void send_MAVLink_v4_4_2_beta_3_HOME_Start_wrapper(void);

    extern void send_MAVLink_v4_4_2_beta_3_HOME_Outputs_wrapper(const uint8_T *iflogic,
			const uint32_T *time_in,
			const uint8_T *AP_SI,
			const uint16_T *GC_req,
			const real32_T *P_val,
			const uint16_T *WP_info,
			const real32_T *WP_param,
			const uint32_T *ss_onboard,
			const uint16_T *ss_LVDE,
			const int16_T *ss_C,
			const int8_T *ss_R,
			const uint32_T *Heartbeat_custom,
			const uint8_T *Heartbeat_data,
			const int16_T *IMU_data,
			const real32_T *attitude,
			const int32_T *lat_long_alt,
			const int16_T *velGPS,
			const uint16_T *hdg,
			const real32_T *VFR_speed,
			const int16_T *VFR_H,
			const uint16_T *VFR_T,
			const uint16_T *Ser_data,
			const uint16_T *prior_in,
			const real32_T *P_refer,
			const uint8_T *Cal_alt,
			const real32_T *T_0,
			const uint8_T *T_int,
			const real32_T *P_RAW,
			const real32_T *deltaP_RAW,
			const int16_T *AB_T,
			const uint8_T *Cal_home,
			const real_T *H_LAT,
			const real_T *H_LONG,
			const real_T *H_ALT,
			const uint16_T *h_lidar,
			uint8_T *enable,
			uint8_T *msg_out,
			uint16_T *Len,
			uint16_T *prior_out);

    extern void send_MAVLink_v4_4_2_beta_3_HOME_Terminate_wrapper(void);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign pu4 = LibBlockInputSignalAddr(4, "", "", 0)
  %assign pu5 = LibBlockInputSignalAddr(5, "", "", 0)
  %assign pu6 = LibBlockInputSignalAddr(6, "", "", 0)
  %assign pu7 = LibBlockInputSignalAddr(7, "", "", 0)
  %assign pu8 = LibBlockInputSignalAddr(8, "", "", 0)
  %assign pu9 = LibBlockInputSignalAddr(9, "", "", 0)
  %assign pu10 = LibBlockInputSignalAddr(10, "", "", 0)
  %assign pu11 = LibBlockInputSignalAddr(11, "", "", 0)
  %assign pu12 = LibBlockInputSignalAddr(12, "", "", 0)
  %assign pu13 = LibBlockInputSignalAddr(13, "", "", 0)
  %assign pu14 = LibBlockInputSignalAddr(14, "", "", 0)
  %assign pu15 = LibBlockInputSignalAddr(15, "", "", 0)
  %assign pu16 = LibBlockInputSignalAddr(16, "", "", 0)
  %assign pu17 = LibBlockInputSignalAddr(17, "", "", 0)
  %assign pu18 = LibBlockInputSignalAddr(18, "", "", 0)
  %assign pu19 = LibBlockInputSignalAddr(19, "", "", 0)
  %assign pu20 = LibBlockInputSignalAddr(20, "", "", 0)
  %assign pu21 = LibBlockInputSignalAddr(21, "", "", 0)
  %assign pu22 = LibBlockInputSignalAddr(22, "", "", 0)
  %assign pu23 = LibBlockInputSignalAddr(23, "", "", 0)
  %assign pu24 = LibBlockInputSignalAddr(24, "", "", 0)
  %assign pu25 = LibBlockInputSignalAddr(25, "", "", 0)
  %assign pu26 = LibBlockInputSignalAddr(26, "", "", 0)
  %assign pu27 = LibBlockInputSignalAddr(27, "", "", 0)
  %assign pu28 = LibBlockInputSignalAddr(28, "", "", 0)
  %assign pu29 = LibBlockInputSignalAddr(29, "", "", 0)
  %assign pu30 = LibBlockInputSignalAddr(30, "", "", 0)
  %assign pu31 = LibBlockInputSignalAddr(31, "", "", 0)
  %assign pu32 = LibBlockInputSignalAddr(32, "", "", 0)
  %assign pu33 = LibBlockInputSignalAddr(33, "", "", 0)
  %assign pu34 = LibBlockInputSignalAddr(34, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  send_MAVLink_v4_4_2_beta_3_HOME_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<pu4>, %<pu5>, %<pu6>, %<pu7>, %<pu8>, %<pu9>, %<pu10>, %<pu11>, %<pu12>, %<pu13>, %<pu14>, %<pu15>, %<pu16>, %<pu17>, %<pu18>, %<pu19>, %<pu20>, %<pu21>, %<pu22>, %<pu23>, %<pu24>, %<pu25>, %<pu26>, %<pu27>, %<pu28>, %<pu29>, %<pu30>, %<pu31>, %<pu32>, %<pu33>, %<pu34>, %<py0>, %<py1>, %<py2>, %<py3>);
  %%
%endfunction


%% [EOF] send_MAVLink_v4_4_2_beta_3_HOME.tlc

